colcon build --symlink-install --packages-select lab4_interpolacja_ruchu^C

ros2 launch lab4_interpolacja_ruchu lab3.launch.py

ros2 run lab4_interpolacja_ruchu nonkdl

ros2 run lab4_interpolacja_ruchu kdl

------------------------------------

Program testowałem "na sucho" korzystając z servisu AddTwoInts.srv z tutoriala
( w sensie przerabiałem servis z py_srvcli) i wszystko było ok - 
jak robiłem echo na topicu /joint_states to widać krokowe zmiany pozycji
w stawach, aż do zadanej pozycji :-)

Żeby nie było tak pięknie to jest problem xD
Nie udaje się zaimportować tego pliku (Interpolation.srv) zawierającego strukturę komunikacji jest w folderze /srv

Np. ta komenda powinna zwrócić strukturę komunikacji
ros2 interface show lab4_interpolacja_ruchu/srv/Interpolation
ale to się nie udaje :-(

W internecie dużo osób dodaje zależność nie tylko do package.xml, ale także do CMake.txt,
ale nie jestem pewien czy tu leży problem.

Logika jest cała zrobiona, klient także ok.

Wrzucę też linki, z których korzystałem bo mogą się jeszcze przydać:
https://docs.ros.org/en/foxy/Tutorials/Custom-ROS2-Interfaces.html
https://answers.ros.org/question/344042/ros2-service-header-files/
https://roboticsbackend.com/ros2-create-custom-message/

Uruchamianie:

1) ros2 run lab4_interpolacja_ruchu service
2) ros2 run lab4_interpolacja_ruchu client
3) ros2 topic echo /joint_states

--------------------------------------

Najważniejsze to uporać się z tym plikiem .srv

Dalsze dodanie Exception kiedy pozycja zadana jest poza limitem lub podano zerowy czas to nie jest problem

W wersji rozszerzonej proponuję interpolację wielomianem 3-go stopnia z zerową prędkością początkową i końcową

Druga część zadania:

Ogarnąłem już wizualizację, ale nie "ubierałem" tego w serwis póki jest problem z plikiem .srv

Uruchamianie (na razie to sam plik pythona):

1) python3 my_tf_broadcaster.py
2) można podejrzeć co nadaje : ros2 topic echo /cartesian
3) rviz2
po odpaleniu Rviz będzie krzyczał,że nie ma fixed frame, więc musimy dodać - w nowej konsoli trzeba wpisać:
ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 1 map base_frame

potem w Rviz dodajesz base frame jako fixed frame, następnie Add pose i wybierasz topic cartesian + można dodać tf to wyświetli układ zerowy :-)
Układ będzie sobie latał w przestrzenii






